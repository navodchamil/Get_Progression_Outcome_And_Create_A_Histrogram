# Calculate the outcome
def calculate_outcome(pass_mark, defer_mark, fail_mark):
    outcomes = {
        (120, 0, 0): "Progress",
        (100, 20, 0): "Progress (module trailer)",
        (100, 0, 20): "Progress (module trailer)",
        (80, 40, 0): "Module retriever",
        (80, 20, 20): "Module retriever",
        (80, 0, 40): "Module retriever",
        (60, 60, 0): "Module retriever",
        (60, 40, 20): "Module retriever",
        (60, 20, 40): "Module retriever",
        (60, 0, 60): "Module retriever",
        (40, 80, 0): "Module retriever",
        (40, 60, 20): "Module retriever",
        (40, 40, 40): "Module retriever",
        (40, 20, 60): "Module retriever",
        (40, 0, 80): "Exclude",
        (20, 100, 0): "Module retriever",
        (20, 80, 20): "Module retriever",
        (20, 60, 40): "Module retriever",
        (20, 40, 60): "Module retriever",
        (20, 20, 80): "Exclude",
        (20, 0, 100): "Exclude",
        (0, 120, 0): "Module retriever",
        (0, 100, 20): "Module retriever",
        (0, 80, 40): "Module retriever",
        (0, 60, 60): "Module retriever",
        (0, 40, 80): "Exclude",
        (0, 20, 100): "Exclude",
        (0, 0, 120): "Exclude",
    }

    return outcomes.get((pass_mark, defer_mark, fail_mark))

    # Geting the input
    def get_credit_input(prompt, valid_credit_values):
        while True:
            try:
                value = int(input(prompt))
                if value in valid_credit_values:
                    return value
                else:
                    print("Out of range.")
            except ValueError:
                print("Integer required.")
    
